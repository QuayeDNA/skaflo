import { FolderStructure } from '../types';

export const reactFeatureBasedStructure: FolderStructure = {
  id: 'react-feature-based',
  name: 'React Feature-Based',
  description: 'React application with feature-based architecture',
  framework: 'react',
  structure: 'feature-based',
  directories: [
    'src',
    'src/features',
    'src/features/auth',
    'src/features/auth/components',
    'src/features/auth/hooks',
    'src/features/auth/services',
    'src/features/auth/types',
    'src/features/auth/utils',
    'src/features/home',
    'src/features/home/components',
    'src/features/home/hooks',
    'src/features/home/services',
    'src/features/home/types',
    'src/features/home/utils',
    'src/features/profile',
    'src/features/profile/components',
    'src/features/profile/hooks',
    'src/features/profile/services',
    'src/features/profile/types',
    'src/features/profile/utils',
    'src/shared',
    'src/shared/components',
    'src/shared/hooks',
    'src/shared/services',
    'src/shared/types',
    'src/shared/utils',
    'src/shared/constants',
    'src/shared/contexts',
    'public',
    'public/assets',
    'public/assets/images',
    'public/assets/icons',
    'tests',
    'tests/unit',
    'tests/integration',
    'tests/e2e',
    'docs',
  ],
};

export const reactComponentBasedStructure: FolderStructure = {
  id: 'react-component-based',
  name: 'React Component-Based',
  description:
    'React application with traditional component-based architecture',
  framework: 'react',
  structure: 'component-based',
  directories: [
    'src',
    'src/components',
    'src/components/common',
    'src/components/layout',
    'src/components/forms',
    'src/components/ui',
    'src/pages',
    'src/hooks',
    'src/services',
    'src/utils',
    'src/types',
    'src/contexts',
    'src/constants',
    'src/assets',
    'src/assets/images',
    'src/assets/icons',
    'src/assets/styles',
    'public',
    'public/assets',
    'tests',
    'tests/components',
    'tests/pages',
    'tests/hooks',
    'tests/utils',
    'docs',
  ],
};

export const reactAtomicDesignStructure: FolderStructure = {
  id: 'react-atomic-design',
  name: 'React Atomic Design',
  description:
    'React application using Atomic Design methodology for component organization',
  framework: 'react',
  structure: 'atomic-design',
  directories: [
    'src',
    'src/components',
    'src/components/atoms',
    'src/components/atoms/buttons',
    'src/components/atoms/inputs',
    'src/components/atoms/typography',
    'src/components/molecules',
    'src/components/molecules/forms',
    'src/components/molecules/cards',
    'src/components/molecules/navigation',
    'src/components/organisms',
    'src/components/organisms/headers',
    'src/components/organisms/footers',
    'src/components/organisms/sections',
    'src/components/templates',
    'src/components/templates/layouts',
    'src/components/templates/pages',
    'src/pages',
    'src/hooks',
    'src/services',
    'src/utils',
    'src/types',
    'src/contexts',
    'src/constants',
    'src/styles',
    'src/styles/tokens',
    'src/styles/themes',
    'src/assets',
    'public',
    'tests',
    'tests/atoms',
    'tests/molecules',
    'tests/organisms',
    'tests/templates',
    'docs',
    'docs/design-system',
  ],
};

export const reactMonorepoStructure: FolderStructure = {
  id: 'react-monorepo',
  name: 'React Monorepo',
  description:
    'React monorepo structure with multiple apps and shared packages',
  framework: 'react',
  structure: 'monorepo',
  directories: [
    'apps',
    'apps/web',
    'apps/web/src',
    'apps/web/public',
    'apps/admin',
    'apps/admin/src',
    'apps/admin/public',
    'packages',
    'packages/ui',
    'packages/ui/src',
    'packages/ui/src/components',
    'packages/shared',
    'packages/shared/src',
    'packages/shared/src/utils',
    'packages/shared/src/types',
    'packages/config',
    'packages/config/eslint',
    'packages/config/typescript',
    'tests',
    'docs',
  ],
};
