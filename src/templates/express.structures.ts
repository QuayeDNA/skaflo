import { FolderStructure } from '../types';

export const expressLayeredStructure: FolderStructure = {
  id: 'express-layered',
  name: 'Express Layered Architecture',
  description:
    'Express application with layered architecture and separation of concerns',
  framework: 'express',
  structure: 'layered',
  directories: [
    'src',
    'src/config',
    'src/controllers',
    'src/services',
    'src/repositories',
    'src/models',
    'src/middleware',
    'src/routes',
    'src/utils',
    'src/utils/helpers',
    'src/utils/validators',
    'src/types',
    'src/constants',
    'src/errors',
    'public',
    'public/assets',
    'tests',
    'tests/unit',
    'tests/unit/controllers',
    'tests/unit/services',
    'tests/unit/repositories',
    'tests/integration',
    'tests/e2e',
    'docs',
  ],
};

export const expressMvcStructure: FolderStructure = {
  id: 'express-mvc',
  name: 'Express MVC Pattern',
  description: 'Express application with Model-View-Controller architecture',
  framework: 'express',
  structure: 'mvc',
  directories: [
    'src',
    'src/config',
    'src/config/database',
    'src/controllers',
    'src/models',
    'src/views',
    'src/views/layouts',
    'src/views/partials',
    'src/routes',
    'src/middleware',
    'src/middleware/auth',
    'src/middleware/validation',
    'src/services',
    'src/utils',
    'src/utils/helpers',
    'src/utils/validators',
    'src/types',
    'src/constants',
    'public',
    'public/css',
    'public/js',
    'public/images',
    'tests',
    'tests/unit',
    'tests/integration',
    'tests/e2e',
    'docs',
  ],
};

export const expressFeatureBasedStructure: FolderStructure = {
  id: 'express-feature-based',
  name: 'Express Feature-Based',
  description:
    'Express application with feature-based domain-driven architecture',
  framework: 'express',
  structure: 'feature-based',
  directories: [
    'src',
    'src/config',
    'src/config/database',
    'src/config/auth',
    'src/features',
    'src/features/auth',
    'src/features/auth/controllers',
    'src/features/auth/services',
    'src/features/auth/models',
    'src/features/auth/routes',
    'src/features/users',
    'src/features/users/controllers',
    'src/features/users/services',
    'src/features/users/models',
    'src/features/users/routes',
    'src/features/products',
    'src/features/products/controllers',
    'src/features/products/services',
    'src/features/products/models',
    'src/features/products/routes',
    'src/shared',
    'src/shared/middleware',
    'src/shared/utils',
    'src/shared/types',
    'src/shared/constants',
    'src/shared/errors',
    'public',
    'public/assets',
    'tests',
    'tests/unit',
    'tests/integration',
    'tests/e2e',
    'docs',
  ],
};
